const User = require("../models/User");
const bcrypt = require("bcrypt");

// T·∫°o d·ªØ li·ªáu m·∫´u cho c√°c roles
const createSampleUsers = async () => {
  try {
    console.log("üîß T·∫°o d·ªØ li·ªáu m·∫´u cho RBAC...");

    // Ki·ªÉm tra xem ƒë√£ c√≥ users sample ch∆∞a
    const existingUsers = await User.find({
      email: {
        $in: ["admin@example.com", "moderator@example.com", "user@example.com"],
      },
    });

    if (existingUsers.length > 0) {
      console.log("‚ÑπÔ∏è  D·ªØ li·ªáu m·∫´u ƒë√£ t·ªìn t·∫°i, b·ªè qua t·∫°o m·ªõi");
      return;
    }

    // Hash password
    const hashedPassword = await bcrypt.hash("password123", 10);

    // T·∫°o sample users
    const sampleUsers = [
      {
        name: "System Admin",
        email: "admin@example.com",
        password: hashedPassword,
        role: "admin",
        isActive: true,
      },
      {
        name: "Content Moderator",
        email: "moderator@example.com",
        password: hashedPassword,
        role: "moderator",
        isActive: true,
      },
      {
        name: "Regular User",
        email: "user@example.com",
        password: hashedPassword,
        role: "user",
        isActive: true,
      },
      {
        name: "Test User 2",
        email: "user2@example.com",
        password: hashedPassword,
        role: "user",
        isActive: false, // Inactive user ƒë·ªÉ test
      },
    ];

    await User.insertMany(sampleUsers);
    console.log("‚úÖ T·∫°o d·ªØ li·ªáu m·∫´u RBAC th√†nh c√¥ng!");

    console.log("üìã T√†i kho·∫£n test:");
    console.log("   Admin: admin@example.com / password123");
    console.log("   Moderator: moderator@example.com / password123");
    console.log("   User: user@example.com / password123");
  } catch (error) {
    console.error("‚ùå L·ªói t·∫°o d·ªØ li·ªáu m·∫´u:", error);
  }
};

module.exports = { createSampleUsers };
